Курсовой проект "Управление программами проектов"

Ссылка на репозиторий GitHub: https://github.com/Effgenii/GeekBrains_SQL_start/tree/main/12_course_project_MYSQL

	База данных хранит информацию о проектах, программах проектов и задачах, реализуемых в компании, их участниках и исполнителях

	Таблицы:
	1. user - содержит всех пользователей организации, которые могут быть руководителями программ, проектов или исполнителями задач проектов.
	2. programm - содержит программы
	3. project - содержит проекты, входящие в программы, могут быть проекты, не привязанные к программам (non-identifying relationship). (Для упрощения, предполагаем программы не содержат других объектов, кроме проектов, проект может быть только в одной программе)
	4. project_type - содержит типы проектов
	5. programm_budget - содержит бюджеты программ, каждая строка - бюджет определенной программы за период - план и факт. Периоды задаются и контрооируются на уровне приложения). Валюта, для простоты не указывается (рубль)
	6. project_budget - содержит бюджеты проектов. Таблицы с бюджетами программ и проектов - разделены.
	7. task - содержит задачи, могут быть задачи, не привязанные к проектам (non-identifying relationship). У каждой задачи есть ответственный (в отличие от проектов и программ), задачи могут быть прязаны друг к другу.
	8. priority - справочник приоритетов для задач (обычная, срочная и очень срочная)
	9. contract - договора, заключенные по проектам. Для упрощения все условия контракта хранятся в поле Descripion тип MEDIUMTEXT
	10.partner - справочник контрагентов
	11. programm_goal - справочник целей программы, у одной программы может быть несколько целей. У целей (эффектов) есть заинтересованные лица - для простоты это текстовое поле.

Таблицу user заполнял данными, сгенерированными с помощью питона - библиотека faker

скрипты характерных выборок (включающие группировки, JOIN'ы, вложенные таблицы);
1. Вложенные селекты: Список просроченных задач проекта и программы
2. Плановые бюджеты программ и план/факт проектов программ

представления (минимум 2);
1. Join Программы + Проекты + Руководители программ
2. Join Проекты + Контракты + Контрагенты

хранимые процедуры / триггеры;
- подсчет количества незакрытых (`task_completed` is not null ) задач у пользователя

- замена для задачи уволенных исполнителей задачи на руководителя проекта 
(при простановке у пользовалеля признака "уволен", триггер заменяет в задачах его на руководителя его проекта)


